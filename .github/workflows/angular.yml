name: Angular CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}   # 手動觸發

jobs:
  build:
    runs-on: ubuntu-latest
    # NEW:（可選）避免無限等待
    timeout-minutes: 20  # NEW

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test -- --watch=false --browsers=ChromeHeadless || echo "no tests"

      - name: Build for production
        # NEW:（可選）給 build 多點記憶體；保留你的 base-href
        env:
          NODE_OPTIONS: --max_old_space_size=4096   # NEW
        run: npm run build -- --configuration production --base-href=/${{ github.event.repository.name }}/

      # NEW: 自動偵測 angular.json 的 outputPath（不再依賴 defaultProject，也不假設有 /browser）
      - name: Detect dist path  # NEW
        id: dist               # NEW
        run: |                 # NEW
          OUT=$(node -e "const a=require('./angular.json');const k=Object.keys(a.projects)[0];process.stdout.write(a.projects[k].architect.build.options.outputPath)")
          echo "out=$OUT" >> $GITHUB_OUTPUT

      # FIX: 用偵測到的 outputPath 來建立 404.html（修正原本使用 defaultProject 與 /browser 導致的 undefined）
      - name: Create 404.html for SPA  # FIX
        run: |                         # FIX
          cp "${{ steps.dist.outputs.out }}/index.html" "${{ steps.dist.outputs.out }}/404.html"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      # FIX: 上傳 artifact 的路徑改用偵測到的 outputPath（不再硬寫 /browser）
      - name: Upload artifact           # FIX
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.dist.outputs.out }}   # FIX

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      #（保持原樣）
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
