name: Angular CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

# ✅ NEW：給整個 workflow 必要的權限（很重要，否則會出現 Resource not accessible by integration）
permissions:
  contents: read
  pages: write # NEW
  id-token: write # NEW

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20 # NEW:（可選）避免無限等待

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test -- --watch=false --browsers=ChromeHeadless || echo "no tests"

      - name: Build for production
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: npm run build -- --configuration production --base-href=/${{ github.event.repository.name }}/

      # NEW: 自動偵測 angular.json 的 outputPath（不再依賴 defaultProject，也不假設有 /browser）
      - name: Detect dist path
        id: dist
        run: |
          OUT=$(node -e "const a=require('./angular.json');const k=Object.keys(a.projects)[0];process.stdout.write(a.projects[k].architect.build.options.outputPath)")
          echo "out=$OUT" >> $GITHUB_OUTPUT

      - name: Resolve final dist directory # FIX：決定要用 base 還是 /browser
        id: dist_final
        run: |
          BASE="${{ steps.dist.outputs.out }}"
          if [ -d "$BASE/browser" ]; then
            DIR="$BASE/browser"
          else
            DIR="$BASE"
          fi
          echo "dir=$DIR" >> $GITHUB_OUTPUT
          echo "Final dist dir: $DIR"
          ls -la "$DIR" || true

      - name: Create 404.html for SPA # FIX：在「最終目錄」複製 404
        run: |
          DIR="${{ steps.dist_final.outputs.dir }}"
          cp "$DIR/index.html" "$DIR/404.html"

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          enablement: true # 保留：若尚未啟用 Pages，幫你自動啟用為由 Actions 佈署

      - name: Upload artifact # FIX：上傳「最終目錄」
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.dist_final.outputs.dir }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # 下方 permissions 可以保留（但有了全域 permissions 就不一定需要了）
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
